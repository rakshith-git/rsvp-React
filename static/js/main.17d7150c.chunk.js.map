{"version":3,"sources":["components/navbar.js","components/accordian.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","_ref","title","first","second","_ref$dropDown","dropDown","_ref$dropDownitem","dropDownitem1","_ref$dropDownitem2","dropDownitem2","_ref$dropDownitem3","dropDownitem3","React","createElement","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","Accordion","inpFunc","data-bs-parent","htmlFor","onChange","rows","defaultValue","count","App","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","isBionic","setisBionic","_useState5","_useState6","inputText","setinputText","_useState7","_useState8","halfLen","setHalfLen","_useState9","_useState10","increment","setIncrement","_useState11","_useState12","pause","setpause","_useState13","_useState14","modeTxt","setModeTxt","_useState15","_useState16","currentIndex","setCurrentIndex","textArray","split","useEffect","intervalId","setInterval","length","clearInterval","Math","floor","Fragment","e","text","target","console","log","replace","trim","style","color","slice","Error","error","message","mode","aria-valuenow","aria-valuemin","aria-valuemax","width","parseInt","min","max","event","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.17d7150c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar({title,first,second,dropDown=\"dropDown\",dropDownitem1=\"item-1\",dropDownitem2=\"item-2\",dropDownitem3=\"item-3\"}) {\r\n  return (\r\n    <div><nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n    <div className=\"container-fluid\" >\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        {title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n              {first}\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              {second}\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a\r\n              className=\"nav-link dropdown-toggle\"\r\n              href=\"/\"\r\n              role=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {dropDown}\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  {dropDownitem1}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                {dropDownitem2}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <hr className=\"dropdown-divider\" />\r\n              </li>\r\n              <li>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                {dropDownitem3}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        \r\n      </div>\r\n    </div>\r\n  </nav></div>\r\n  )\r\n  \r\n}\r\n","import React from 'react'\r\n\r\nexport default function Accordion({inpFunc}) {\r\n\r\n  return (\r\n    <div><div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\">\r\n        <button\r\n          className=\"accordion-button collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#flush-collapseOne\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"flush-collapseOne\"\r\n        >\r\n          Enter input here\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"flush-collapseOne\"\r\n        className=\"accordion-collapse collapse\"\r\n        data-bs-parent=\"#accordionFlushExample\"\r\n      >\r\n        <div className=\"accordion-body\">\r\n          <div className=\"mb-3\">\r\n            <label\r\n              htmlFor=\"exampleFormControlTextarea1\"\r\n              className=\"form-label\"\r\n            >\r\n              Input Text\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              onChange={inpFunc}\r\n              rows={3}\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  )\r\n}\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Accordion from \"./components/accordian\";\r\n\r\nlet count = 0;\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(50);\r\n  const [isBionic, setisBionic] = useState(false);\r\n  const [inputText, setinputText] = useState(\"\");\r\n  const [halfLen, setHalfLen] = useState(2);\r\n  const [increment, setIncrement] = useState(0);\r\n  const [pause, setpause] = useState(\"Start\");\r\n  const [modeTxt, setModeTxt] = useState(\"Bionic\")\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  let textArray = [];\r\n\r\n  if(inputText)\r\n  {\r\n    textArray=inputText.split(\" \")\r\n  }\r\n  else\r\n  {\r\n    setinputText(\"Enter text\")\r\n  }\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      if (increment === 0 || count >= textArray.length - 1)\r\n        return () => clearInterval(intervalId);\r\n\r\n      setCurrentIndex((currentIndex) => {\r\n        setHalfLen((halfLen) => {\r\n          \r\n          if (currentIndex + 1 < textArray.length)\r\n            return Math.floor(textArray[currentIndex + 1].length / 2);\r\n        });\r\n\r\n        return currentIndex + increment;\r\n      });\r\n\r\n      count++;\r\n    }, 50000 / value); // Change the interval time here to adjust the speed of the RSVP\r\n    return () => clearInterval(intervalId);\r\n  }, [value, increment]);\r\n\r\n\r\n\r\n  function processText(text)\r\n  {   \r\n    setIncrement(0);\r\n    setpause(\"Start\");\r\n    console.log(text)\r\n    if(text)\r\n      return(text.replace(/\\n/g, ' . ').replace('-',' ').trim())\r\n    \r\n      else{\r\n      console.log(\"null\")\r\n      setinputText(\" \")\r\n      return(\"Enter text\")\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const mode = () => {\r\n    try {\r\n    if(inputText)\r\n    { console.log(inputText)\r\n    if (isBionic===true)\r\n    return (\r\n      <>\r\n        <h1 className=\"darkertxt\" style={{ color: \"white\" }}>\r\n          {textArray[currentIndex].slice(0, halfLen)}\r\n        </h1>\r\n        <h1 className=\"lightertxt\">\r\n          {textArray[currentIndex].slice(\r\n            halfLen,\r\n            textArray[currentIndex].length\r\n          )}\r\n        </h1>\r\n      </>\r\n    );\r\n    else return(<><h1 className=\"darkertxt\" style={{ color: \"white\" }}>\r\n    {textArray[currentIndex]}\r\n  </h1></>);\r\n    }\r\n    else throw new Error('Text is empty or undefined');\r\n  }\r\n    catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  function handleClickPause() {\r\n    if (increment === 0) {\r\n      setIncrement(() => 1);\r\n      setpause(() => \"Pause\");\r\n    } else {\r\n      setIncrement(() => 0);\r\n      setpause(() => \"Start\");\r\n    }\r\n  }\r\n  function handleClickRestart() {\r\n    count = 0;\r\n    setCurrentIndex((currentIndex) => 0);\r\n    setIncrement(0);\r\n    setpause(\"Start\");\r\n    \r\n  }\r\n  function handleClickBionic() {\r\n    if (isBionic === false) {\r\n      setisBionic(true);\r\n      setModeTxt(\"Normal\");\r\n    } \r\n    else \r\n    {\r\n      setisBionic(false);\r\n      setModeTxt(\"Bionic\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        title=\"RSVP\"\r\n        first=\"Home\"\r\n        second=\"About\"\r\n        dropDown=\"Mode\"\r\n        dropDownitem1=\"lmao1\"\r\n        dropDownitem2=\"lmao2\"\r\n      />\r\n\r\n      <Accordion inpFunc={(e) => setinputText(processText(e.target.value))} />\r\n      <div className=\"rsvp\">{mode()}</div>\r\n      <div className=\"prog\">\r\n        <div\r\n          className=\"progress\"\r\n          role=\"progressbar\"\r\n          aria-label=\"Basic example\"\r\n          aria-valuenow=\"0\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n        >\r\n          <div\r\n            className=\"progress-bar bg-success\"\r\n            aria-label=\"Success example\"\r\n            style={{ width: (count / (textArray.length - 1)) * 100 + \"%\" }}\r\n          >\r\n            {parseInt((count * 100) / (textArray.length - 1)) + \"%\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slider\">\r\n          <label htmlFor=\"customRange1\" className=\"form-label\">\r\n            wpm={parseInt(60 * (1000 / (60000 / value)))}\r\n          </label>\r\n          <input\r\n            type=\"range\"\r\n            className=\"form-range\"\r\n            min=\"1\"\r\n            max=\"700\"\r\n            value={value}\r\n            onChange={(event) => setValue(event.target.value)}\r\n            id=\"customRange1\"\r\n          />\r\n        </div>\r\n        <div className=\"plbButtons\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={handleClickPause}\r\n          >\r\n            {pause}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={handleClickRestart}\r\n          >\r\n            Restart\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={handleClickBionic}\r\n          >\r\n            {modeTxt}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}